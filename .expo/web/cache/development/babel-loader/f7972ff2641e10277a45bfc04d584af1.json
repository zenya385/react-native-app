{"ast":null,"code":"import _slicedToArray from \"@babel/runtime/helpers/slicedToArray\";\nimport { StatusBar } from \"expo-status-bar\";\nimport React, { useState } from \"react\";\nimport StyleSheet from \"react-native-web/dist/exports/StyleSheet\";\nimport Text from \"react-native-web/dist/exports/Text\";\nimport View from \"react-native-web/dist/exports/View\";\nimport Button from \"react-native-web/dist/exports/Button\";\nimport Alert from \"react-native-web/dist/exports/Alert\";\nimport TextInput from \"react-native-web/dist/exports/TextInput\";\nimport KeyboardAvoidingView from \"react-native-web/dist/exports/KeyboardAvoidingView\";\nimport Platform from \"react-native-web/dist/exports/Platform\";\nimport TouchableWithoutFeedback from \"react-native-web/dist/exports/TouchableWithoutFeedback\";\nimport Keyboard from \"react-native-web/dist/exports/Keyboard\";\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nimport { jsxs as _jsxs } from \"react/jsx-runtime\";\nexport default function App() {\n  var _useState = useState(\"\"),\n      _useState2 = _slicedToArray(_useState, 2),\n      name = _useState2[0],\n      setName = _useState2[1];\n\n  var _useState3 = useState(\"\"),\n      _useState4 = _slicedToArray(_useState3, 2),\n      password = _useState4[0],\n      setPassword = _useState4[1];\n\n  var nameHandler = function nameHandler(text) {\n    return setName(text);\n  };\n\n  var passwordHandler = function passwordHandler(text) {\n    return setPassword(text);\n  };\n\n  var onLogin = function onLogin() {\n    Alert.alert(\"Credentials\", name + \" + \" + password);\n  };\n\n  return _jsx(TouchableWithoutFeedback, {\n    onPress: Keyboard.dismiss,\n    children: _jsxs(View, {\n      style: styles.container,\n      children: [_jsx(Text, {\n        style: styles.text,\n        children: \"\\u041F\\u0440\\u0438\\u0432\\u0456\\u0442!\"\n      }), _jsx(KeyboardAvoidingView, {\n        behavior: Platform.OS == \"ios\" ? \"padding\" : \"height\",\n        children: _jsx(TextInput, {\n          value: name,\n          placeholder: \"Username\",\n          onChangeText: nameHandler,\n          style: styles.input\n        })\n      }), _jsx(TextInput, {\n        value: Password,\n        placeholder: \"Password\",\n        onChangeText: passwordHandler,\n        style: styles.input\n      }), _jsx(StatusBar, {\n        style: \"auto\"\n      })]\n    })\n  });\n}\nvar styles = StyleSheet.create({\n  container: {\n    flex: 1,\n    backgroundColor: \"gray\",\n    alignItems: \"center\",\n    justifyContent: \"flex-end\"\n  },\n  text: {\n    color: \"white\",\n    fontSize: 50\n  }\n});","map":{"version":3,"names":["StatusBar","React","useState","App","name","setName","password","setPassword","nameHandler","text","passwordHandler","onLogin","Alert","alert","Keyboard","dismiss","styles","container","Platform","OS","input","Password","StyleSheet","create","flex","backgroundColor","alignItems","justifyContent","color","fontSize"],"sources":["C:/Users/Zenya385/Documents/GitHub/react-native-app/App.js"],"sourcesContent":["import { StatusBar } from \"expo-status-bar\";\nimport React, { useState } from \"react\";\nimport { StyleSheet, Text, View, Button, Alert, TextInput, KeyboardAvoidingView, Platform, TouchableWithoutFeedback, Keyboard, } from \"react-native\";\n\n\nexport default function App() {\n  const [name, setName] = useState(\"\");\n  const [password, setPassword] = useState(\"\");\n\n  const nameHandler = (text) => setName(text);\n  const passwordHandler = (text) => setPassword(text);\n\n  const onLogin = () => {\n    Alert.alert(\"Credentials\", `${name} + ${password}`);\n  };\n\n\n  return (\n      <TouchableWithoutFeedback onPress={Keyboard.dismiss}>\n    <View style={styles.container}>\n      <Text style={styles.text}>Привіт!</Text>\n      <KeyboardAvoidingView\n        behavior={Platform.OS == \"ios\" ? \"padding\" : \"height\"}\n      >\n        <TextInput\n          value={name}\n          placeholder={\"Username\"}\n          onChangeText={nameHandler}\n          style={styles.input}\n        />\n      </KeyboardAvoidingView>\n        <TextInput\n          value={Password}\n          placeholder={\"Password\"}\n          onChangeText={passwordHandler}\n          style={styles.input}\n        />\n\n      {/* <Button /> */}\n      <StatusBar style=\"auto\" />\n    </View>\n    </TouchableWithoutFeedback>\n  );\n}\n\nconst styles = StyleSheet.create({\n  container: {\n    flex: 1,\n    backgroundColor: \"gray\",\n    alignItems: \"center\",\n    // justifyContent: \"center\",\n    justifyContent: \"flex-end\",\n    // paddingBottom: 100,\n    // paddingTop: 30\n  },\n  text: {\n    color: \"white\",\n    fontSize: 50,\n  },\n});\n"],"mappings":";AAAA,SAASA,SAAT,QAA0B,iBAA1B;AACA,OAAOC,KAAP,IAAgBC,QAAhB,QAAgC,OAAhC;;;;;;;;;;;;;AAIA,eAAe,SAASC,GAAT,GAAe;EAC5B,gBAAwBD,QAAQ,CAAC,EAAD,CAAhC;EAAA;EAAA,IAAOE,IAAP;EAAA,IAAaC,OAAb;;EACA,iBAAgCH,QAAQ,CAAC,EAAD,CAAxC;EAAA;EAAA,IAAOI,QAAP;EAAA,IAAiBC,WAAjB;;EAEA,IAAMC,WAAW,GAAG,SAAdA,WAAc,CAACC,IAAD;IAAA,OAAUJ,OAAO,CAACI,IAAD,CAAjB;EAAA,CAApB;;EACA,IAAMC,eAAe,GAAG,SAAlBA,eAAkB,CAACD,IAAD;IAAA,OAAUF,WAAW,CAACE,IAAD,CAArB;EAAA,CAAxB;;EAEA,IAAME,OAAO,GAAG,SAAVA,OAAU,GAAM;IACpBC,KAAK,CAACC,KAAN,CAAY,aAAZ,EAA8BT,IAA9B,WAAwCE,QAAxC;EACD,CAFD;;EAKA,OACI,KAAC,wBAAD;IAA0B,OAAO,EAAEQ,QAAQ,CAACC,OAA5C;IAAA,UACF,MAAC,IAAD;MAAM,KAAK,EAAEC,MAAM,CAACC,SAApB;MAAA,WACE,KAAC,IAAD;QAAM,KAAK,EAAED,MAAM,CAACP,IAApB;QAAA;MAAA,EADF,EAEE,KAAC,oBAAD;QACE,QAAQ,EAAES,QAAQ,CAACC,EAAT,IAAe,KAAf,GAAuB,SAAvB,GAAmC,QAD/C;QAAA,UAGE,KAAC,SAAD;UACE,KAAK,EAAEf,IADT;UAEE,WAAW,EAAE,UAFf;UAGE,YAAY,EAAEI,WAHhB;UAIE,KAAK,EAAEQ,MAAM,CAACI;QAJhB;MAHF,EAFF,EAYI,KAAC,SAAD;QACE,KAAK,EAAEC,QADT;QAEE,WAAW,EAAE,UAFf;QAGE,YAAY,EAAEX,eAHhB;QAIE,KAAK,EAAEM,MAAM,CAACI;MAJhB,EAZJ,EAoBE,KAAC,SAAD;QAAW,KAAK,EAAC;MAAjB,EApBF;IAAA;EADE,EADJ;AA0BD;AAED,IAAMJ,MAAM,GAAGM,UAAU,CAACC,MAAX,CAAkB;EAC/BN,SAAS,EAAE;IACTO,IAAI,EAAE,CADG;IAETC,eAAe,EAAE,MAFR;IAGTC,UAAU,EAAE,QAHH;IAKTC,cAAc,EAAE;EALP,CADoB;EAU/BlB,IAAI,EAAE;IACJmB,KAAK,EAAE,OADH;IAEJC,QAAQ,EAAE;EAFN;AAVyB,CAAlB,CAAf"},"metadata":{},"sourceType":"module"}