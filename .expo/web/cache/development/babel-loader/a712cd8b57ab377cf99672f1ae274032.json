{"ast":null,"code":"import _slicedToArray from \"@babel/runtime/helpers/slicedToArray\";\nimport { StatusBar } from \"expo-status-bar\";\nimport React, { useState } from \"react\";\nimport StyleSheet from \"react-native-web/dist/exports/StyleSheet\";\nimport Text from \"react-native-web/dist/exports/Text\";\nimport View from \"react-native-web/dist/exports/View\";\nimport Button from \"react-native-web/dist/exports/Button\";\nimport Alert from \"react-native-web/dist/exports/Alert\";\nimport TextInput from \"react-native-web/dist/exports/TextInput\";\nimport KeyboardAvoidingView from \"react-native-web/dist/exports/KeyboardAvoidingView\";\nimport Platform from \"react-native-web/dist/exports/Platform\";\nimport TouchableWithoutFeedback from \"react-native-web/dist/exports/TouchableWithoutFeedback\";\nimport Keyboard from \"react-native-web/dist/exports/Keyboard\";\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nimport { jsxs as _jsxs } from \"react/jsx-runtime\";\nexport default function App() {\n  var _useState = useState(\"\"),\n      _useState2 = _slicedToArray(_useState, 2),\n      value = _useState2[0],\n      setValue = _useState2[1];\n\n  var inputHandler = function inputHandler(text) {\n    return setValue(text);\n  };\n\n  return _jsx(TouchableWithoutFeedback, {\n    onPress: Keyboard.dismiss,\n    children: _jsxs(View, {\n      style: styles.container,\n      children: [_jsx(Text, {\n        style: styles.text,\n        children: \"\\u041F\\u0440\\u0438\\u0432\\u0456\\u0442!\"\n      }), _jsx(KeyboardAvoidingView, {\n        behavior: Platform.OS == \"ios\" ? \"padding\" : \"height\",\n        children: _jsx(TextInput, {\n          placeholder: \"Login\",\n          value: value,\n          onChangeText: inputHandler\n        })\n      }), _jsx(TextInput, {\n        placeholder: \"Password\",\n        value: value,\n        onChangeText: inputHandler\n      }), _jsx(StatusBar, {\n        style: \"auto\"\n      })]\n    })\n  });\n}\nvar styles = StyleSheet.create({\n  container: {\n    flex: 1,\n    backgroundColor: \"gray\",\n    alignItems: \"center\",\n    justifyContent: \"flex-end\"\n  },\n  text: {\n    color: \"white\",\n    fontSize: 50\n  }\n});","map":{"version":3,"names":["StatusBar","React","useState","App","value","setValue","inputHandler","text","Keyboard","dismiss","styles","container","Platform","OS","StyleSheet","create","flex","backgroundColor","alignItems","justifyContent","color","fontSize"],"sources":["C:/Users/Zenya385/Documents/GitHub/react-native-app/App.js"],"sourcesContent":["import { StatusBar } from \"expo-status-bar\";\nimport React, { useState } from \"react\";\nimport { StyleSheet, Text, View, Button, Alert, TextInput, KeyboardAvoidingView, Platform, TouchableWithoutFeedback, Keyboard, } from \"react-native\";\n\n\nexport default function App() {\n  const [value, setValue] = useState(\"\");\n  const inputHandler = (text) => setValue(text);\n\n  return (\n      <TouchableWithoutFeedback onPress={Keyboard.dismiss}>\n    <View style={styles.container}>\n      <Text style={styles.text}>Привіт!</Text>\n      <KeyboardAvoidingView\n        behavior={Platform.OS == \"ios\" ? \"padding\" : \"height\"}\n      >\n        <TextInput\n          placeholder={\"Login\"}\n          value={value}\n          onChangeText={inputHandler}\n        />\n      </KeyboardAvoidingView>\n        <TextInput\n          placeholder={\"Password\"}\n          value={value}\n          onChangeText={inputHandler}\n        />\n\n      {/* <Button /> */}\n      <StatusBar style=\"auto\" />\n    </View>\n    </TouchableWithoutFeedback>\n  );\n}\n\nconst styles = StyleSheet.create({\n  container: {\n    flex: 1,\n    backgroundColor: \"gray\",\n    alignItems: \"center\",\n    // justifyContent: \"center\",\n    justifyContent: \"flex-end\",\n    // paddingBottom: 100,\n    // paddingTop: 30\n  },\n  text: {\n    color: \"white\",\n    fontSize: 50,\n  },\n});\n"],"mappings":";AAAA,SAASA,SAAT,QAA0B,iBAA1B;AACA,OAAOC,KAAP,IAAgBC,QAAhB,QAAgC,OAAhC;;;;;;;;;;;;;AAIA,eAAe,SAASC,GAAT,GAAe;EAC5B,gBAA0BD,QAAQ,CAAC,EAAD,CAAlC;EAAA;EAAA,IAAOE,KAAP;EAAA,IAAcC,QAAd;;EACA,IAAMC,YAAY,GAAG,SAAfA,YAAe,CAACC,IAAD;IAAA,OAAUF,QAAQ,CAACE,IAAD,CAAlB;EAAA,CAArB;;EAEA,OACI,KAAC,wBAAD;IAA0B,OAAO,EAAEC,QAAQ,CAACC,OAA5C;IAAA,UACF,MAAC,IAAD;MAAM,KAAK,EAAEC,MAAM,CAACC,SAApB;MAAA,WACE,KAAC,IAAD;QAAM,KAAK,EAAED,MAAM,CAACH,IAApB;QAAA;MAAA,EADF,EAEE,KAAC,oBAAD;QACE,QAAQ,EAAEK,QAAQ,CAACC,EAAT,IAAe,KAAf,GAAuB,SAAvB,GAAmC,QAD/C;QAAA,UAGE,KAAC,SAAD;UACE,WAAW,EAAE,OADf;UAEE,KAAK,EAAET,KAFT;UAGE,YAAY,EAAEE;QAHhB;MAHF,EAFF,EAWI,KAAC,SAAD;QACE,WAAW,EAAE,UADf;QAEE,KAAK,EAAEF,KAFT;QAGE,YAAY,EAAEE;MAHhB,EAXJ,EAkBE,KAAC,SAAD;QAAW,KAAK,EAAC;MAAjB,EAlBF;IAAA;EADE,EADJ;AAwBD;AAED,IAAMI,MAAM,GAAGI,UAAU,CAACC,MAAX,CAAkB;EAC/BJ,SAAS,EAAE;IACTK,IAAI,EAAE,CADG;IAETC,eAAe,EAAE,MAFR;IAGTC,UAAU,EAAE,QAHH;IAKTC,cAAc,EAAE;EALP,CADoB;EAU/BZ,IAAI,EAAE;IACJa,KAAK,EAAE,OADH;IAEJC,QAAQ,EAAE;EAFN;AAVyB,CAAlB,CAAf"},"metadata":{},"sourceType":"module"}