{"ast":null,"code":"import _slicedToArray from \"@babel/runtime/helpers/slicedToArray\";\nimport { StatusBar } from \"expo-status-bar\";\nimport React, { useState } from \"react\";\nimport StyleSheet from \"react-native-web/dist/exports/StyleSheet\";\nimport Text from \"react-native-web/dist/exports/Text\";\nimport View from \"react-native-web/dist/exports/View\";\nimport TouchableOpacity from \"react-native-web/dist/exports/TouchableOpacity\";\nimport Alert from \"react-native-web/dist/exports/Alert\";\nimport TextInput from \"react-native-web/dist/exports/TextInput\";\nimport KeyboardAvoidingView from \"react-native-web/dist/exports/KeyboardAvoidingView\";\nimport Platform from \"react-native-web/dist/exports/Platform\";\nimport TouchableWithoutFeedback from \"react-native-web/dist/exports/TouchableWithoutFeedback\";\nimport Keyboard from \"react-native-web/dist/exports/Keyboard\";\nimport Image from \"react-native-web/dist/exports/Image\";\nimport ImageBackground from \"react-native-web/dist/exports/ImageBackground\";\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nimport { jsxs as _jsxs } from \"react/jsx-runtime\";\nexport default function App() {\n  var _useState = useState(\"\"),\n      _useState2 = _slicedToArray(_useState, 2),\n      name = _useState2[0],\n      setName = _useState2[1];\n\n  var _useState3 = useState(\"\"),\n      _useState4 = _slicedToArray(_useState3, 2),\n      password = _useState4[0],\n      setPassword = _useState4[1];\n\n  var _useState5 = useState(\"\"),\n      _useState6 = _slicedToArray(_useState5, 2),\n      email = _useState6[0],\n      setEmail = _useState6[1];\n\n  var nameHandler = function nameHandler(text) {\n    return setName(text);\n  };\n\n  var passwordHandler = function passwordHandler(text) {\n    return setPassword(text);\n  };\n\n  var emailHandler = function emailHandler(text) {\n    return setEmail(text);\n  };\n\n  var onLogin = function onLogin() {\n    Alert.alert(\"Credentials\", name + \" + \" + password + \"+\" + email);\n  };\n\n  return _jsx(TouchableWithoutFeedback, {\n    onPress: Keyboard.dismiss,\n    children: _jsxs(View, {\n      style: styles.container,\n      children: [_jsx(ImageBackground, {\n        source: require(\"./assets/images/photoBg.jpg\"),\n        style: styles.image\n      }), _jsx(Text, {\n        style: styles.text,\n        children: \"\\u0420\\u0435\\u0433\\u0438\\u0441\\u0442\\u0440\\u0430\\u0446\\u0438\\u044F\"\n      }), _jsx(KeyboardAvoidingView, {\n        behavior: Platform.OS == \"ios\" ? \"padding\" : \"height\",\n        children: _jsxs(View, {\n          style: styles.form,\n          children: [_jsx(View, {\n            children: _jsx(TextInput, {\n              value: name,\n              placeholder: \"Логин\",\n              placeholderTextColor: \"#BDBDBD\",\n              onChangeText: nameHandler,\n              style: styles.input\n            })\n          }), _jsx(View, {\n            children: _jsx(TextInput, {\n              value: password,\n              placeholder: \"Адрес электронной почты\",\n              placeholderTextColor: \"#BDBDBD\",\n              onChangeText: passwordHandler,\n              style: styles.input\n            })\n          }), _jsx(View, {\n            children: _jsx(TextInput, {\n              value: email,\n              placeholder: \"Пароль\",\n              placeholderTextColor: \"#BDBDBD\",\n              onChangeText: emailHandler,\n              style: styles.input\n            })\n          }), _jsx(TouchableOpacity, {\n            onPress: onLogin,\n            activeOpacity: 0.8,\n            style: styles.btn,\n            children: _jsx(Text, {\n              style: styles.btnTitle,\n              children: \"\\u0417\\u0430\\u0440\\u0435\\u0433\\u0438\\u0441\\u0442\\u0440\\u0438\\u0440\\u043E\\u0432\\u0430\\u0442\\u044C\\u0441\\u044F\"\n            })\n          }), _jsxs(View, {\n            children: [_jsx(Text, {\n              style: styles.textBottom,\n              children: \"\\u0423\\u0436\\u0435 \\u0435\\u0441\\u0442\\u044C \\u0430\\u043A\\u043A\\u0430\\u0443\\u043D\\u0442?\"\n            }), _jsx(TouchableOpacity, {\n              style: styles.btnLogIn,\n              onPress: onLogin,\n              children: _jsx(Text, {\n                style: styles.textBottom,\n                children: \"\\u0412\\u043E\\u0439\\u0442\\u0438\"\n              })\n            })]\n          })]\n        })\n      }), _jsx(StatusBar, {\n        style: \"auto\"\n      })]\n    })\n  });\n}\nvar styles = StyleSheet.create({\n  container: {\n    flex: 1,\n    backgroundColor: \"#ffffff\",\n    justifyContent: \"center\"\n  },\n  image: {\n    flex: 1,\n    width: 375,\n    height: 812,\n    resizeMode: \"cover\",\n    justifyContent: \"center\",\n    alignItems: \"center\"\n  },\n  text: {\n    color: \"#212121\",\n    fontSize: 30,\n    textAlign: \"center\",\n    marginBottom: 33,\n    marginTop: 92\n  },\n  input: {\n    width: 343,\n    height: 50,\n    backgroundColor: \"#F6F6F6\",\n    paddingRight: 16,\n    paddingLeft: 16,\n    borderWidth: 1,\n    borderColor: \"#E8E8E8\",\n    marginBottom: 16,\n    marginLeft: 16,\n    borderRadius: 8\n  },\n  btn: {\n    backgroundColor: \"#FF6C00\",\n    height: 51,\n    borderRadius: 100,\n    marginTop: 43,\n    justifyContent: \"center\",\n    alignItems: \"center\",\n    marginHorizontal: 16,\n    marginBottom: 16\n  },\n  btnTitle: {\n    color: \"#f0f8ff\",\n    fontSize: 18\n  },\n  textBottom: {\n    color: \"#212121\",\n    fontSize: 16,\n    textAlign: \"center\",\n    marginTop: 92\n  },\n  btnLogIn: {\n    color: \"#212121\",\n    fontSize: 16,\n    textAlign: \"center\",\n    marginBottom: 33,\n    marginTop: 92\n  }\n});","map":{"version":3,"names":["StatusBar","React","useState","App","name","setName","password","setPassword","email","setEmail","nameHandler","text","passwordHandler","emailHandler","onLogin","Alert","alert","Keyboard","dismiss","styles","container","require","image","Platform","OS","form","input","btn","btnTitle","textBottom","btnLogIn","StyleSheet","create","flex","backgroundColor","justifyContent","width","height","resizeMode","alignItems","color","fontSize","textAlign","marginBottom","marginTop","paddingRight","paddingLeft","borderWidth","borderColor","marginLeft","borderRadius","marginHorizontal"],"sources":["C:/Users/Zenya385/Documents/GitHub/react-native-app/App.js"],"sourcesContent":["import { StatusBar } from \"expo-status-bar\";\nimport React, { useState } from \"react\";\nimport {\n  StyleSheet,\n  Text,\n  View,\n  TouchableOpacity,\n  Alert,\n  TextInput,\n  KeyboardAvoidingView,\n  Platform,\n  TouchableWithoutFeedback,\n  Keyboard,\n  Image,\n  ImageBackground,\n} from \"react-native\";\n\n// const image = { uri: \"https://reactjs.org/logo-og.png\" };\n\nexport default function App() {\n  const [name, setName] = useState(\"\");\n  const [password, setPassword] = useState(\"\");\n  const [email, setEmail] = useState(\"\");\n\n  const nameHandler = (text) => setName(text);\n  const passwordHandler = (text) => setPassword(text);\n  const emailHandler = (text) => setEmail(text);\n\n  const onLogin = () => {\n    Alert.alert(\"Credentials\", `${name} + ${password}+${email}`);\n  };\n\n  return (\n    <TouchableWithoutFeedback onPress={Keyboard.dismiss}>\n      <View style={styles.container}>\n        <ImageBackground\n          source={require(\"./assets/images/photoBg.jpg\")}\n          style={styles.image}\n        ></ImageBackground>\n        <Text style={styles.text}>Регистрация</Text>\n        <KeyboardAvoidingView\n          behavior={Platform.OS == \"ios\" ? \"padding\" : \"height\"}\n        >\n          <View style={styles.form}>\n            <View>\n              <TextInput\n                value={name}\n                placeholder={\"Логин\"}\n                placeholderTextColor=\"#BDBDBD\"\n                onChangeText={nameHandler}\n                style={styles.input}\n              />\n            </View>\n            <View>\n              <TextInput\n                value={password}\n                placeholder={\"Адрес электронной почты\"}\n                placeholderTextColor=\"#BDBDBD\"\n                onChangeText={passwordHandler}\n                style={styles.input}\n              />\n            </View>\n            <View>\n              <TextInput\n                value={email}\n                placeholder={\"Пароль\"}\n                placeholderTextColor=\"#BDBDBD\"\n                onChangeText={emailHandler}\n                style={styles.input}\n              />\n            </View>\n            <TouchableOpacity\n              onPress={onLogin}\n              activeOpacity={0.8}\n              style={styles.btn}\n            >\n              <Text style={styles.btnTitle}>Зарегистрироваться</Text>\n            </TouchableOpacity>\n            <View>\n              <Text style={styles.textBottom}>Уже есть аккаунт?</Text>\n              <TouchableOpacity style={styles.btnLogIn} onPress={onLogin}>\n                <Text style={styles.textBottom}>Войти</Text>\n              </TouchableOpacity>\n            </View>\n            {/* <Button onPress={onLogin} title={\"Зарегистрироваться\"} style={styles.button} /> */}\n          </View>\n        </KeyboardAvoidingView>\n        <StatusBar style=\"auto\" />\n      </View>\n    </TouchableWithoutFeedback>\n  );\n}\n\nconst styles = StyleSheet.create({\n  container: {\n    flex: 1,\n    backgroundColor: \"#ffffff\",\n    // background: url(photo-1536528087222-ef43dd3bb0f3.jpg),\n    // alignItems: \"center\",\n    justifyContent: \"center\",\n    // justifyContent: \"flex-end\",\n    // paddingBottom: 100,\n    // paddingTop: 30\n  },\n  image: {\n    flex: 1,\n    width: 375,\n    height: 812,\n    resizeMode: \"cover\",\n    justifyContent: \"center\",\n    alignItems: \"center\",\n  },\n\n  text: {\n    color: \"#212121\",\n    fontSize: 30,\n    textAlign: \"center\",\n    marginBottom: 33,\n    marginTop: 92,\n  },\n  input: {\n    width: 343,\n    height: 50,\n  \n    backgroundColor: \"#F6F6F6\",\n    paddingRight: 16,\n    paddingLeft: 16,\n    borderWidth: 1,\n    borderColor: \"#E8E8E8\",\n    marginBottom: 16,\n    marginLeft: 16,\n    borderRadius: 8,\n  },\n\n  btn: {\n    backgroundColor: \"#FF6C00\",\n    height: 51,\n    borderRadius: 100,\n    marginTop: 43,\n    justifyContent: \"center\",\n    alignItems: \"center\",\n    marginHorizontal: 16,\n    marginBottom: 16,\n  },\n  btnTitle: {\n    color: \"#f0f8ff\",\n    fontSize: 18,\n  },\n  textBottom: {\n    color: \"#212121\",\n    fontSize: 16,\n    textAlign: \"center\",\n    // marginBottom: 33,\n    marginTop: 92,\n  },\n  btnLogIn: {\n    color: \"#212121\",\n    fontSize: 16,\n    textAlign: \"center\",\n    marginBottom: 33,\n    marginTop: 92,\n  },\n});\n"],"mappings":"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"},"metadata":{},"sourceType":"module"}